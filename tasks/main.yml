# vim:ft=ansible:
---

- name: import aws metadata if such exists
  import_tasks: aws.yml

- name: install package ansible ansible depends of
  apt:
    name: "{{ item }}"
    state: present
  with_items:
    - iproute2
  register: install_iproute

- name: Set ansible fact ansible_default_ipv4
  setup:
  when: install_iproute is changed

- name: Ensure dependencies are installed.
  apt:
    name:
      - apt-transport-https
      - ca-certificates
    state: present

- name: Ensure additional dependencies are installed (on Ubuntu < 20.04 and any other systems).
  apt:
    name: gnupg2
    state: present
  when: ansible_distribution != 'Ubuntu' or ansible_distribution_version is version('20.04', '<')

- name: Ensure additional dependencies are installed (on Ubuntu >= 20.04).
  apt:
    name: gnupg
    state: present
  when: ansible_distribution == 'Ubuntu' or ansible_distribution_version is version('20.04', '>=')

- name: Add OpenVPN apt key.
  apt_key:
    url: "{{ openvpn_apt_gpg_key }}"
    id: 30EBF4E73CCE63EEE124DD278E6DA8B4E158C569
    state: present
  register: add_repository_key

- name: Add OpenVPN repository.
  apt_repository:
    repo: "{{ openvpn_apt_repository }}"
    state: present
    update_cache: true

- name: install openvpn
  apt:
    name: "{{ item }}"
    state: present
  with_items:
    - openvpn
    - easy-rsa

- name: Create openvpn etc directory
  file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
    mode: 0755
  with_items:
    - /etc/openvpn
    - /etc/openvpn/easy-rsa

- name: copy the /usr/share/easy-rsa directory to /etc/openvpn
  copy:
    src: /usr/share/easy-rsa/
    dest: /etc/openvpn/easy-rsa/
    mode: preserve
    remote_src: yes
    directory_mode: yes

- name: set executable permissions to file /etc/openvpn/easy-rsa/easyrsa
  file:
    path: /etc/openvpn/easy-rsa/easyrsa
    mode: 0755
    state: file

- name: install easy-rsa vars file
  template:
    src: vars.j2
    dest: /etc/openvpn/easy-rsa/vars
    owner: "{{ openvpn_daemon_user }}"
    group: "{{ openvpn_daemon_group }}"

- name: Check if restore from backup lock file exists
  stat:
    path: /etc/openvpn/restore-from-backup.lock
  register: restore_from_backup_lock
  when: restore_from_s3_backup

- name: Restore keys from backup
  import_tasks: restore-keys.yml
  when: restore_from_s3_backup and restore_from_backup_lock.stat.exists == False

- name: Generate certs and keys
  import_tasks: generate-keys.yml
  when: openvpn_dh1024_pem is not defined or openvpn_ca_key is not defined or openvpn_server_key is not defined or openvpn_crl_pem is not defined

- name: install existing keys
  import_tasks: install-keys.yml
  when: openvpn_dh1024_pem is defined and openvpn_ca_key is defined and openvpn_server_key is defined and openvpn_crl_pem is defined

- name: install openvpn server config
  template:
    src: server.conf.j2
    dest: /etc/openvpn/server.conf
  notify: Restart openvpn server

- name: Start openvpn server
  service:
    name: openvpn@server
    state: started
    enabled: yes
  when: ansible_env.GITLAB_CI is not defined

- name: setup iptables to route traffic to VPC network
  import_tasks: nat.yml
